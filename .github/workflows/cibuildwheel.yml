name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      pypi-env:
        description: 'PyPI Environment for Deployment'
        options:
        - prod
        - test
        required: true
        default: test

jobs:
  package-wheel:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macOS-12
          - os: ubuntu-22.04
          - os: windows-2022
            arch: x86
          - os: windows-2022
            arch: x64

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
        with:
          arch: ${{ matrix.arch }}

      - name: 'Setup NuGet credentials'
        if: runner.os == 'Windows'
        shell: 'bash'
        run: |
          nuget="$(vcpkg fetch nuget | tail -n 1)"
          "${nuget}" \
            sources add \
            -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json" \
            -storepasswordincleartext \
            -name "GitHub" \
            -username "${GITHUB_REPOSITORY_OWNER}" \
            -password "${{ secrets.GITHUB_TOKEN }}"
          "${nuget}" \
            setapikey "${{ secrets.GITHUB_TOKEN }}" \
            -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json"

      - name: Install packages (Windows)
        if: runner.os == 'Windows'
        run: vcpkg install curl[core,non-http,schannel]:${{ matrix.arch }}-windows

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch == 'x86' && 'x86' || 'AMD64' }}
          CIBW_ENVIRONMENT_WINDOWS: PYCURL_CURL_DIR=C:/vcpkg/packages/curl_${{ matrix.arch }}-windows PYCURL_SSL_LIBRARY=schannel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: delvewheel repair --add-path C:/vcpkg/installed/${{ matrix.arch }}-windows/bin -w {dest_dir} {wheel}
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  deploy:
    runs-on: ubuntu-22.04
    needs: package-wheel
    steps:
      - name: Download distributions
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ github.event.inputs.pypi-env == 'prod' && 'https://upload.pypi.org/legacy/' || 'https://test.pypi.org/legacy/' }}
